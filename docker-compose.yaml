services:
  flutter:
    container_name: flutter
    build: ./frontend/
    command: bash -c "flutter clean && flutter build web && firebase emulators:start && flutter clean && flutter run -d web-server --web-hostname=0.0.0.0 --web-port=8888" 
    env_file: .env
    volumes:
      - ./frontend/app:/app
      - flutter-sdk:/app/flutter
    ports:
      - 4000:4000
      - 5000:5000
      - 9099:9099
      - 8000:8000
      - 8888:8888
      - 5900:5900
    tty: true
    stdin_open: true

  go:
    container_name: go
    build:
      context: ./backend/
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./backend/app:/app/
      - tmp-data:/app/tmp
      - voicevox-core-volume:/app/voicevox_core
    environment:
      FIRESTORE_EMULATOR_HOST: "flutter:8000"
      FIREBASE_AUTH_EMULATOR_HOST: "flutter:9099"
    ports:
      - 8080:8080
      - 127.0.0.1:50021:50021
    env_file:
      - .env
    tty: true
    stdin_open: true

# #goの本番環境を模したコンテナ
#   go-prod:
#     container_name: go-prod
#     build:
#       context: ./backend/
#       dockerfile: ./Dockerfile.prod
#     environment:
#        FIRESTORE_EMULATOR_HOST: "flutter:8000"
#        FIREBASE_AUTH_EMULATOR_HOST: "flutter:9099"
#     ports:
#       - 8080:8080
#       - 127.0.0.1:50021:50021
#     tty: true
#     stdin_open: true
    
  # ceiroink:
  #   container_name: coeiroink
  #   image: voicevox/voicevox_engine:cpu-ubuntu20.04-latest
  #   ports:
  #   - 127.0.0.1:50021:50021
  #   tty: true
  #   stdin_open: true
  
volumes:
  tmp-data:
  voicevox-core-volume:
  flutter-sdk: